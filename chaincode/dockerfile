# Stage 1: Build
FROM node:18-alpine AS builder

WORKDIR /usr/src/chaincode

# Copiar dependencias y código
COPY package*.json tsconfig.json ./
COPY ./src ./src

# Instalar y compilar
RUN npm ci && npm run build

# Stage 2: Runtime
FROM node:18-alpine

# ARG para ser usado en EXPOSE y ENV
ARG CC_SERVER_PORT=9999

# tini para manejar señales (recomendado)
ENV TINI_VERSION v0.19.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini
RUN chmod +x /tini

# Crear usuario sin privilegios
RUN addgroup -S appgroup && adduser -S appuser -G appgroup
USER appuser

WORKDIR /usr/src/chaincode

# Copiar archivos necesarios desde builder
COPY --from=builder /usr/src/chaincode/dist ./dist
COPY --from=builder /usr/src/chaincode/package*.json ./

RUN npm ci --omit=dev && npm cache clean --force

# Variables de entorno (usadas por Fabric)
ENV CHAINCODE_SERVER_ADDRESS=0.0.0.0:${CC_SERVER_PORT}
ENV PORT=${CC_SERVER_PORT}

# Exponer puerto para el Fabric Chaincode Server
EXPOSE ${CC_SERVER_PORT}

ENTRYPOINT ["/tini", "--"]
CMD ["npm", "run", "start"]
